<?xml version="1.0" encoding="UTF-8"?>

  <!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
 									"http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration> 									
	<!-- these are tweaks you can apply to mybatis default configurations -->
	<settings>
	 <!-- Specifies if setters or map's put method will be called when a retrieved value is null. It is useful when you rely on Map.keySet() or null value initialization. Note primitives such as (int,boolean,etc.) will not be set to null --> 
	 <!-- shlomo: I changed it to for dynamic tables, be careful when you have DO with primitive (e.g. int instead of Integer) -->
	  <setting name="callSettersOnNulls" value="true"/>
	  	
	<!-- Globally enables or disables any caches configured in any mapper under this configuration. 
	  <setting name="cacheEnabled" value="true"/>
-->	  
	<!--Globally enables or disables lazy loading. When disabled, all associations will be eagerly loaded  
	  <setting name="lazyLoadingEnabled" value="true"/>
-->	  
	<!-- When enabled, an object with lazy loaded properties will be loaded entirely upon a call to any of the lazy properties. Otherwise, each property is loaded on demand 
	  <setting name="aggressiveLazyLoading" value="true"/>
-->	  
	<!-- Allows or disallows multiple ResultSets to be returned from a single statement (compatible driver required) 
	  <setting name="multipleResultSetsEnabled" value="true"/>
-->	  
	<!-- Uses the column label instead of the column name. Different drivers behave differently in this respect. Refer to the driver documentation, or test out both modes to determine how your driver behaves 
	  <setting name="useColumnLabel" value="true"/>
-->	  
	<!-- Allows JDBC support for generated keys. A compatible driver is required. This setting forces generated keys to be used if set to true, as some drivers deny compatibility but still work (e.g. Derby).
	  <setting name="useGeneratedKeys" value="false"/>
 -->
	 <!-- Specifies if and how MyBatis should automatically map columns to fields/properties. NONE disables auto-mapping. PARTIAL will only auto-map results with no nested result mappings defined inside. FULL will auto-map result mappings of any complexity (containing nested or otherwise). 
	  <setting name="autoMappingBehavior" value="PARTIAL"/>
-->
	<!-- Configures the default executor. SIMPLE executor does nothing special. REUSE executor reuses prepared statements. BATCH executor reuses statements and batches updates. 
	  <setting name="defaultExecutorType" value="SIMPLE"/>
-->	  
	<!-- Sets the number of seconds the driver will wait for a response from the database. 
	  <setting name="defaultStatementTimeout" value="25"/>
-->	  
	<!-- Allows using RowBounds on nested statements 
	  <setting name="safeRowBoundsEnabled" value="false"/>
-->	  
	<!-- Enables automatic mapping from classic database column names A_COLUMN to camel case classic Java property names aColumn 
	  <setting name="mapUnderscoreToCamelCase" value="false"/>
-->
	<!-- MyBatis uses local cache to prevent circular references and speed up repeated nested queries. By default (SESSION) all queries executed during a session are cached. If localCacheScope=STATEMENT local session will be used just for statement execution, no data will be shared between two different calls to the same SqlSession. 
	  <setting name="localCacheScope" value="SESSION"/>
-->	  
	<!-- Specifies the JDBC type for null values when no specific JDBC type was provided for the parameter. Some drivers require specifying the column JDBC type but others work with generic values like NULL, VARCHAR or OTHER 
	  <setting name="jdbcTypeForNull" value="OTHER"/>
-->  	  
	<!-- Specifies which Object's methods trigger a lazy load 
	  <setting name="lazyLoadTriggerMethods" value="equals,clone,hashCode,toString"/>
-->	  
	<!--  Specifies the language used by default for dynamic SQL generation.
	  <setting name="defaultScriptingLanguage" value="org.apache.ibatis.scripting.xmltags.XMLDynamicLanguageDriver"/>
 --> 

	 <!-- Specifies the prefix string that MyBatis will add to the logger names.
	  <setting name="logPrefix" value=""/>
 -->	  
	 <!--  Specifies which logging implementation MyBatis should use. If this setting is not present logging implementation will be autodiscovered
	  <setting name="logImpl" value=""/>
-->
	 <!-- Specifies the proxy tool that MyBatis will use for creating lazy loading capable objects. CGLIB | JAVASSIST 
	  <setting name="proxyFactory" value="CGLIB"/>
	  -->
	</settings>
	
	<typeAliases>
		<!--  <typeAlias type="com.tsg.domain.BigDataDO" alias="BigDataDO"/>-->         
		
	</typeAliases>
</configuration>